% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/runSWATpar.R
\name{runSWATpar}
\alias{runSWATpar}
\title{Execute SWAT run in parallel}
\usage{
runSWATpar(
  workingDirectory,
  TxtInOutFolder,
  outputExtraction,
  ncores,
  swatExe,
  parameterValue,
  paraSelection,
  caliParam,
  copyUnchangeFiles,
  fileCioInfo,
  fromToDate,
  firstRun
)
}
\arguments{
\item{workingDirectory}{path to the working directory where all files created
by SWAT or SWAT+ will be saved}

\item{TxtInOutFolder}{path to the original TxtInOut folder of SWAT or SWAT+}

\item{outputExtraction}{a dataframe instructs which outputs should be
extracted after each run/iteration}

\item{ncores}{number of threads for parallel execution}

\item{swatExe}{path of the SWAT or SWAT+ execution file}

\item{parameterValue}{a dataframe contains all parametersets for running SWAT
or SWAT+}

\item{paraSelection}{a data frame}

\item{caliParam}{dataframe of parameters, number of row is number of samples,
the first column is the sample ID and the number of subsequence columns are
the number of parameters.}

\item{copyUnchangeFiles}{should unchanged files be copied}

\item{fileCioInfo}{a dataframe containing simulation time, warum up time}

\item{fromToDate}{a date vector with length of 2, indicating from which time
period the function should extract outputs}

\item{firstRun}{logical (set to TRUE if this is the first iteration/run),
in the first iteration, all files need to be copied to the new TxtInOut folder
for SWAT/SWAT+ run, in the subsequent iterations, only files that content
parameters (that need to be changed) are updated.}
}
\value{
no return value, results will be saved in the workingDirectory
}
\description{
This will run SWAT in parallel
}
\examples{

\donttest{
runSWATpar(workingDirectory,
           TxtInOutFolder,
           outputExtraction,
           ncores,
           swatExe,
           parameterValue,
           paraSelection,
           caliParam,
           copyUnchangeFiles,
           fileCioInfo,
           fromToDate,
           firstRun)
}

}
