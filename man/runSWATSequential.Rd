% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/runSWATpar.R
\name{runSWATSequential}
\alias{runSWATSequential}
\title{Execute SWAT/SWAT+ run in sequential used in parallel function (or alone)}
\usage{
runSWATSequential(
  coreNumber,
  workingDirectory,
  swatExe,
  caliParam,
  paraSelection,
  subParameterSet,
  outputExtraction,
  fileCioInfo,
  fromToDate,
  firstRun,
  readOutputScript = NULL
)
}
\arguments{
\item{coreNumber}{Core number}

\item{workingDirectory}{path to the working directory where all files created
by SWAT or SWAT+ will be saved}

\item{swatExe}{path of the SWAT or SWAT+ execution file}

\item{caliParam}{dataframe of parameters, number of row is number of samples,
the first column is the sample ID and the number of subsequence columns are
the number of parameters.}

\item{paraSelection}{a data frame}

\item{subParameterSet}{data frame contains subset of parameters if it is used
when run SWAT/SWAT+ parallel, all parameters if it is used alone}

\item{outputExtraction}{a dataframe instructs which outputs should be
extracted after each run/iteration}

\item{fileCioInfo}{a dataframe containing simulation time, warum up time}

\item{fromToDate}{a date vector with length of 2, indicating from which time
period the function should extract outputs}

\item{firstRun}{logical (set to TRUE if this is the first iteration/run),
in the first iteration, all files need to be copied to the new TxtInOut folder
for SWAT/SWAT+ run, in the subsequent iterations, only files that content
parameters (that need to be changed) are updated.}

\item{readOutputScript}{optional input - the R script file containing the
function to read SWAT output file according to the user define in this function}
}
\value{
no return value, results will be saved in the workingDirectory
}
\description{
This function will run SWAT or SWAT+ in sequential, one by one
}
\examples{

\donttest{
runSWATSequential(coreNumber,
                  workingDirectory,
                  swatExe,
                  caliParam,
                  paraSelection,
                  subParameterSet,
                  outputExtraction,
                  fileCioInfo,
                  fromToDate,
                  firstRun,
                  readOutputScript)
}

}
